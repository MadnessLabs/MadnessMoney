/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';

import {
  EventEmitter,
} from '@stencil/core';

declare global {
  interface HTMLAppAccountsElement extends HTMLStencilElement {
    'api': any;
  }
  var HTMLAppAccountsElement: {
    prototype: HTMLAppAccountsElement;
    new (): HTMLAppAccountsElement;
  };
  interface HTMLElementTagNameMap {
    'app-accounts': HTMLAppAccountsElement;
  }
  interface ElementTagNameMap {
    'app-accounts': HTMLAppAccountsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-accounts': JSXElements.AppAccountsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppAccountsAttributes extends HTMLAttributes {
      'api'?: any;
    }
  }
}


declare global {
  interface HTMLAppCardsElement extends HTMLStencilElement {
    'api': any;
  }
  var HTMLAppCardsElement: {
    prototype: HTMLAppCardsElement;
    new (): HTMLAppCardsElement;
  };
  interface HTMLElementTagNameMap {
    'app-cards': HTMLAppCardsElement;
  }
  interface ElementTagNameMap {
    'app-cards': HTMLAppCardsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-cards': JSXElements.AppCardsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCardsAttributes extends HTMLAttributes {
      'api'?: any;
    }
  }
}


declare global {
  interface HTMLAppHomeElement extends HTMLStencilElement {
    'api': any;
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      'api'?: any;
    }
  }
}


declare global {
  interface HTMLAppProfileElement extends HTMLStencilElement {
    'api': any;
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    'app-profile': HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-profile': JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      'api'?: any;
    }
  }
}


declare global {
  interface HTMLLazyImgElement extends HTMLStencilElement {
    'alt': string;
    'src': string;
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    'lazy-img': HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'lazy-img': JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      'alt'?: string;
      'onLazyImgloaded'?: (event: CustomEvent<HTMLImageElement>) => void;
      'src'?: string;
    }
  }
}


declare global {
  interface HTMLMadnessAppElement extends HTMLStencilElement {

  }
  var HTMLMadnessAppElement: {
    prototype: HTMLMadnessAppElement;
    new (): HTMLMadnessAppElement;
  };
  interface HTMLElementTagNameMap {
    'madness-app': HTMLMadnessAppElement;
  }
  interface ElementTagNameMap {
    'madness-app': HTMLMadnessAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'madness-app': JSXElements.MadnessAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MadnessAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
